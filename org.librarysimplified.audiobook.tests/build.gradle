dependencies {
  api project(':org.librarysimplified.audiobook.api')
  api project(':org.librarysimplified.audiobook.downloads')
  api project(':org.librarysimplified.audiobook.feedbooks')
  api project(':org.librarysimplified.audiobook.json_web_token')
  api project(':org.librarysimplified.audiobook.lcp.license_status')
  api project(':org.librarysimplified.audiobook.license_check.api')
  api project(':org.librarysimplified.audiobook.license_check.spi')
  api project(':org.librarysimplified.audiobook.manifest_parser.api')
  api project(':org.librarysimplified.audiobook.manifest_parser.webpub')
  api project(':org.librarysimplified.audiobook.open_access')
  api project(':org.librarysimplified.audiobook.rbdigital')
  api project(':org.librarysimplified.audiobook.views')

  api libraries.mockito
  api libraries.quicktheories
  api libraries.kotlinStdlib
  api libraries.junit
  api libraries.slf4j

  implementation libraries.logbackClassic
}

/*
 * Log unit test executions.
 */

tasks.matching {it instanceof Test}.all {
  testLogging.events = ["failed", "passed", "skipped"]
  testLogging.exceptionFormat = "full"
}
